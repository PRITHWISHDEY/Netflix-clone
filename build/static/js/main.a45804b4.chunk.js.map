{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","Axios","get","request","data","results","fetchData","className","map","movie","key","id","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","videoId","opts","height","width","PlayerVars","autoplay","APIKEY","requests","fetchTrending","fetchnNetflixOriginals","fetchToprated","fetchActionMovies","fetchComedyMovies","fecthHorrorMovies","fetchRomanticMovies","Banner","str","n","setMovie","Requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a45804b4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;\r\n","\r\n import React, {useState,useEffect} from \"react\";\r\n import Axios from \"./axios\";\r\n import \"./Row.css\";\r\n import YouTube from \"react-youtube\";\r\n import movieTrailer from \"movie-trailer\";\r\n const baseURL=\"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({title,fetchURl,isLargeRow}){\r\n\r\nconst[movies,setMovies]=useState([]);\r\nconst[trailerUrl,setTrailerUrl]=useState(\"\");\r\nuseEffect(()=>{\r\n    async function fetchData(){\r\n        const request=await Axios.get(fetchURl);\r\n        setMovies(request.data.results);\r\n        return request;\r\n    }\r\n    fetchData();\r\n\r\n},[fetchURl]);\r\n\r\nconst opts={\r\n    height:\"450\",\r\n    width:\"100%\",\r\n    PlayerVars:{\r\n        autoplay:1,\r\n    },\r\n\r\n};\r\n\r\nconst handleClick=(movie)=>{\r\n    if(trailerUrl){\r\n        setTrailerUrl(\"\");\r\n    }\r\n    else{\r\n        movieTrailer(movie?.title||\"\").then((url)=>{\r\n            const urlParams=new URLSearchParams(new URL(url).search)\r\n            setTrailerUrl(urlParams.get(\"v\"));\r\n\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n    return(<div className=\"row\">\r\n        <h2>{title}</h2>\r\n\r\n        <div className=\"row_posters\">\r\n        \r\n        {movies.map((movie)=>(\r\n            <img className={`row_poster ${isLargeRow && \"row_posterLarge\"}`} \r\n            key={movie.id}\r\n            onClick={()=>{\r\n                handleClick(movie);\r\n            }}\r\n            src={`${baseURL}${isLargeRow?movie.poster_path:movie.backdrop_path}`} alt={movie.title}/>\r\n        ))};\r\n        </div>\r\n        \r\n            {trailerUrl &&<YouTube videoId={trailerUrl} opts={opts} />}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Row;","const APIKEY = \"b41027fb7e5b56daf79e1c8eacd5a0fc\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/day?api_key=${APIKEY}`,\r\n    fetchnNetflixOriginals: `/discover/movie?api_key=${APIKEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&&page=1&with_networks=213`,\r\n    fetchToprated: `/movie/top_rated?api_key=${APIKEY}&language=en-US&page=1`,\r\n    fetchActionMovies: `/discover/movie?api_key=${APIKEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${APIKEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&&with_genres=35`,\r\n    fecthHorrorMovies: `/discover/movie?api_key=${APIKEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&&with_genres=27`,\r\n    fetchRomanticMovies: `/discover/movie?api_key=${APIKEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&&with_genres=10749`,\r\n   \r\n\r\n\r\n\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from \"react\";\r\nimport Axios from \"./axios\";\r\nimport Requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nfunction Banner(){\r\n    const[movie,setMovie]=useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await Axios.get(Requests.fetchnNetflixOriginals)\r\n            setMovie(request.data.results[Math.floor(Math.random()*request.data.results.length)])\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n\r\n    console.log(movie);\r\n    function truncate(str,n){\r\n        return str?.length > n?str.substr(0,n-1)+\"...\":str;\r\n    }\r\n   \r\n\r\n\r\n    return(\r\n\r\n        <header className=\"Banner\" \r\n        style={{backgroundSize:\"cover\",backgroundImage:`url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition:\"center center\"\r\n            \r\n        }}>\r\n\r\n        <div className=\"Banner-Contents\">\r\n        <h1 className=\"Banner-Title\">{movie?.title||movie?.name||movie?.original_name}</h1>\r\n\r\n        <div className=\"Banner-Buttons\">\r\n            <button className=\"Banner-Button\">Play</button>\r\n            <button className=\"Banner-Button\">My List</button>\r\n            \r\n        </div>\r\n        <h1 className=\"Banner-description\">{truncate(movie?.overview,200)}</h1>\r\n        \r\n      \r\n\r\n\r\n       </div>\r\n\r\n       <div className=\"Banner-fadeBottom\">\r\n       </div>\r\n\r\n\r\n        </header>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Banner;\r\n","import React,{useEffect,useState} from \"react\";\r\nimport \"./Nav.css\";\r\n\r\n\r\n\r\n\r\nfunction Nav(){\r\n\r\n    const[show,handleShow]=useState(false);\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=>{\r\n            if(window.scrollY>100){\r\n                handleShow(true)\r\n            }\r\n            else{\r\n                handleShow(false);\r\n            } \r\n        })\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    },[]);\r\n\r\n    return(\r\n        <div className={`Nav ${show && \"Nav-black\"}`}>\r\n        <img className=\"Nav-logo\" src=\"https://assets.brand.microsites.netflix.io/assets/1ed15bca-b389-11e7-9274-06c476b5c346_cm_800w.png?v=6\" alt=\"Netflix Logo\"/>\r\n        <img className=\"Nav-avatar\" src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\" \r\n        alt=\"Netflix-logo\"/>\r\n\r\n    \r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Nav;","import React from \"react\";\nimport Row from \"./Row.js\";\nimport Requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n  \n    \n    <div className=\"App\">\n    <Nav/>\n     <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchURl={Requests.fetchnNetflixOriginals} isLargeRow/>\n      <Row title=\"Top Rated\" fetchURl={Requests.fetchToprated} />\n      <Row title=\"Trending\" fetchURl={Requests.fetchTrending}/>\n      <Row title=\"Action Movies\" fetchURl={Requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchURl={Requests.fetchComedyMovies}/>\n      <Row title=\"Romantic Movies\" fetchURl={Requests.fetchRomanticMovies}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n    \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        \n        checkValidServiceWorker(swUrl, config);\n\n      \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n             \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n             \n              console.log('Content is cached for offline use.');\n\n              \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}